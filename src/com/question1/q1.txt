Q1/- Explain the meaning of the deadlock in multithreaded application, when it can occur in
multithreading applications.Write one example of deadlock.

Answer:- It is a situation where lock doesn't have a key. 
			--It occur when we use synchronized keyword and when two/more threads are waiting for each other.
			
			
Example:-
			
class A {
	public synchronized void funA(B b){
		b1.fun2();
	}

}

class B {
	public synchronized void funB(A a1){
		a1.fun1();
	}
}

class ThreadA extends Thread{
	A a;
	B b;
	
	public ThreadA(A a,B bb) {
		this.b=b;
		this.a=a;
	}
	@Override
	public void run() {
		a.funA(b);
	}
}
class ThreadB extends Thread{
	A a;
	B b;
	public ThreadB(A a,B b) {
		this.b=b;
		this.a=a;
	}
	@Override
	public void run() {
		b.funB(a);
	}
}

class Main {
public static void main(String[] args) {
	A a = new A();
	B b = new B();
	ThreadA t1 = new ThreadA(a, b);
	ThreadB t2 = new ThreadB(a, b);
	t1.start();
	t2.start();
}